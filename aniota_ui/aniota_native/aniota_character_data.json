{
  "character": {
    "name": "Aniota",
    "version": "1.0.0",
    "description": "AI Learning Companion",
    "default_position": { "x": 100, "y": 100 },
    "default_size": { "width": 80, "height": 80 }
  },
  "visual_states": {
    "idle": {
      "shape": "bell",
      "colors": {
        "primary": "#FF69B4",
        "secondary": "#FF1493",
        "accent": "#FFFFFF"
      },
      "animations": {
        "breathing": {
          "type": "scale",
          "values": [1.0, 1.05, 1.0],
          "duration": 2000,
          "repeat": true
        },
        "sparkle": {
          "type": "opacity",
          "elements": ["eye_left", "eye_right"],
          "values": [0.3, 1.0, 0.3],
          "duration": 1800,
          "repeat": true
        }
      }
    },
    "active": {
      "shape": "bell",
      "colors": {
        "primary": "#FF1493",
        "secondary": "#FF69B4",
        "accent": "#FFD700"
      },
      "scale": 1.2
    },
    "thinking": {
      "shape": "bell",
      "colors": {
        "primary": "#9370DB",
        "secondary": "#8A2BE2",
        "accent": "#FFFFFF"
      },
      "animations": {
        "pulse": {
          "type": "glow",
          "intensity": [0.5, 1.0, 0.5],
          "duration": 1000,
          "repeat": true
        }
      }
    }
  },
  "behaviors": {
    "follow_cursor": false,
    "stay_on_screen": true,
    "draggable": true,
    "always_on_top": true,
    "transparent_background": true
  },
  "interactions": {
    "click": {
      "action": "toggle_state",
      "target_state": "active",
      "duration": 3000
    },
    "double_click": {
      "action": "open_interface",
      "interface": "learning_epicenter"
    },
    "right_click": {
      "action": "show_context_menu",
      "menu": [
        { "label": "Settings", "action": "open_settings" },
        { "label": "About", "action": "show_about" },
        { "label": "Hide", "action": "minimize" },
        { "label": "Exit", "action": "quit" }
      ]
    }
  },
  "ui_themes": {
    "default": {
      "window_style": "transparent",
      "border_radius": 40,
      "shadow": {
        "enabled": true,
        "color": "rgba(255, 105, 180, 0.3)",
        "blur": 10,
        "offset": { "x": 0, "y": 2 }
      }
    }
  }
}
# 2025-09-11 | [XX]    | [Description]                        | [Reason]
# -----------------------------------------------------------------------------

# File: package.json
# Purpose: Central entry point and orchestrator for the system.
#
# Type: Main launcher script (not a class file, but acts as a system controller)
#
# Responsibilities:
#   - Loads configuration and resolves paths for all major dependencies ([List dependencies])
#   - Checks and manages the status of critical services (starts/stops as needed)
#   - Launches and monitors all core services:
#       * [Service 1] ([Tech/Port])
#       * [Service 2] ([Tech/Port])
#       * [Service 3] ([Tech/Port])
#       * [Service 4] ([Tech/Port])
#   - Provides command-line flags for status reporting and service termination ([flags])
#   - Handles process cleanup and error reporting
#
# Key Functions:
#   - main(): Orchestrates the full launch sequence and handles CLI flags
#   - launch_service(): Starts a subprocess for a given service
#   - stream_logs(): Streams and truncates logs from subprocesses
#   - run_static_server(): Runs the static file server (if applicable)
#   - is_port_in_use(): Checks if a TCP port is active
#   - get_service_status(): Returns a dict of service statuses
#   - check_service(): Ensures a service is running, starts if not
#   - resolve_path(): Finds the first valid path for a dependency from config
#   - find_dependency_path(): Locates the executable for a dependency
#
# Relationships:
#   - Reads from configuration files for dependency paths
#   - Launches and monitors other scripts and processes
#   - Interacts with the OS for process and port management
#
# Usefulness & Execution Path:
#   - main() is the required entry point and is always used.
#   - [List of essential functions] are all actively used and essential for orchestrating the system.
#   - [Legacy/optional functions] may become obsolete as the system evolves.
#
# Suggestions:
#   - **Performance:** [Performance notes]
#   - **Code Cleanliness:** [Code cleanliness notes]
#   - **Location:** [Location notes]
#   - **Function:** [Function notes]
#   - **Legacy:** [Legacy notes]
#   - **Config:** [Config notes]
#   - **Error Handling:** [Error handling notes]
#   - **Cross-Platform:** [Cross-platform notes]
#
# Summary:
#   - This file is essential, well-placed, and mostly clean.
#   - All major functions are used and support the requirements for modularity, orchestration, and portability.
#   - Minor cleanup (removing redundant code, legacy functions) is recommended to enhance maintainability.
#   - Overall, it effectively serves as the central controller for the system.
#
# CHANGE MANAGEMENT LOG
# Date        | Initials | Description of Change                | Reason for Change
# -----------------------------------------------------------------------------
# 2025-09-11 | [XX]    | [Description]                        | [Reason]
# -----------------------------------------------------------------------------
